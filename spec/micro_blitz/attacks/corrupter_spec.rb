require 'spec_helper'

RSpec.describe MicroBlitz::Corrupter do
  subject { MicroBlitz::Corrupter.new(file) }

  let(:directory) { "test_dir" }
  let(:filename) { "test.rb" }
  let(:file) { "#{directory}/#{filename}" }
  let!(:overrides) do
    {
      files: {
        "test.rb": sample_file
      }
    }
  end
  let!(:sample_file) {
    %Q{
      class Hello
        def initialize(this)
          @this = this
        end

        def say
          puts @this
        end
      end
    }
  }
  let(:original_file_bytes) do
    %Q{
      [\"0a\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"63\", \"6c\", \"61\", \"73\", \"73\", \"20\", \"48\", \"65\", \"6c\", \"6c\", \"6f\", \"0a\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"64\", \"65\", \"66\", \"20\", \"69\", \"6e\", \"69\", \"74\", \"69\", \"61\", \"6c\", \"69\", \"7a\", \"65\", \"28\", \"74\", \"68\", \"69\", \"73\", \"29\", \"0a\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"40\", \"74\", \"68\", \"69\", \"73\", \"20\", \"3d\", \"20\", \"74\", \"68\", \"69\", \"73\", \"0a\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"65\", \"6e\", \"64\", \"0a\", \"0a\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"64\", \"65\", \"66\", \"20\", \"73\", \"61\", \"79\", \"0a\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"70\", \"75\", \"74\", \"73\", \"20\", \"40\", \"74\", \"68\", \"69\", \"73\", \"0a\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"65\", \"6e\", \"64\", \"0a\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"65\", \"6e\", \"64\", \"0a\", \"20\", \"20\", \"20\", \"20\"]
    }
  end

  before do
    configure
  end

  context "#attack" do
    it "corrupts the file" do
      expect(subject.attack).to_not eq(original_file_bytes)
    end
  end

  def configure
    Stubs.setup_directory(directory, overrides)
  end
end
